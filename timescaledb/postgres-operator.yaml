apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-operator
  namespace: monitoring-backup
---
# TOTUNE
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-operator
  namespace: monitoring-backup
data:
  cluster_domain: cluster.local
  cluster_history_entries: "1000"
  cluster_labels: application:spilo
  cluster_name_label: cluster
  # enable_pod_antiaffinity: "false"
  # pod_antiaffinity_topology_key: "kubernetes.io/hostname"
  # enable_shm_volume: "true"
  enable_teams_api: "false" #zalando specific teams api
  # etcd_host: ""
  # infrastructure_roles_secret_name: postgresql-infrastructure-roles
  # inherited_labels: ""
  # kube_iam_role: ""
  # log_s3_bucket: ""
  max_instances: "-1"
  min_instances: "-1"
  # node_readiness_label: ""
  pod_deletion_wait_timeout: 10m
  pod_label_wait_timeout: 10m
  pod_management_policy: "ordered_ready"
  pod_role_label: cluster-role
  pod_service_account_name: "postgres-operator"
  pod_terminate_grace_period: 5m
  ready_wait_interval: 3s
  ready_wait_timeout: 30s
  repair_period: 5m
  replication_username: standby
  resource_check_interval: 3s
  resource_check_timeout: 10m
  resync_period: 5m
  ring_log_lines: "100"
  secret_name_template: "{username}.{cluster}.credentials"
  spilo_privileged: "false"
  super_username: postgres
  watched_namespace: "monitoring-backup" # listen to all namespaces by using "*"
  workers: "4"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: postgres-operator
rules:
  - apiGroups:
      - acid.zalan.do
    resources:
      - postgresqls
      - postgresqls/status
      - operatorconfigurations
    verbs:
      - "*"
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - watch # needed if zalando-postgres-operator account is used for pods as well
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - update
      - delete
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - delete
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - update # only for resizing AWS volumes
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - patch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
      - delete
      - get
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - get
      - create
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - rolebindings
    verbs:
      - get
      - create
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - clusterroles
    verbs:
      - bind
    resourceNames:
      - postgres-operator
  - apiGroups:
      - batch
    resources:
      - cronjobs # enables logical backups
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: postgres-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: postgres-operator
subjects:
  - kind: ServiceAccount
    name: postgres-operator
    namespace: monitoring-backup
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-operator
  namespace: monitoring-backup
spec:
  replicas: 1
  selector:
    matchLabels:
      name: postgres-operator
  template:
    metadata:
      labels:
        name: postgres-operator
    spec:
      serviceAccountName: postgres-operator
      containers:
        - name: postgres-operator
          image: registry.opensource.zalan.do/acid/postgres-operator:v1.2.0
          imagePullPolicy: IfNotPresent
          # TOTUNE
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
            limits:
              cpu: 50m
              memory: 100Mi
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
            - name: CONFIG_MAP_NAME
              value: postgres-operator
